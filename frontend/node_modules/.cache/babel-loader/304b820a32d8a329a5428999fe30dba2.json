{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nexport const getProductsTres = createAsyncThunk('productsList/getProductsTres', async () => {\n  return fetch('http://localhost:3000/products').then(res => res.json());\n  // const res=await fetch('http://localhost:3000/products')\n  // const data= await res.json()\n  // return data\n});\n\nconst initialState = {\n  products: {},\n  status: null\n};\nexport const productsListSlice = createSlice({\n  name: 'productsList',\n  initialState,\n  reducers: {\n    updateProductsList: (state, action) => {\n      console.log(\"ðŸš€ ~ file: products.slice.js ~ line 13 ~ state,action\", state, action);\n      state.products = action.payload;\n    }\n  },\n  extraReducers: {\n    [getProductsTres.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getProductsTres.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.products = action.payload;\n    },\n    [getProductsTres.rejected]: (state, action) => {\n      state.status = 'failed';\n    }\n  }\n});\nexport const {\n  updateProductsList\n} = productsListSlice.actions;\nexport const productsListReducer = productsListSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getProductsTres","fetch","then","res","json","initialState","products","status","productsListSlice","name","reducers","updateProductsList","state","action","console","log","payload","extraReducers","pending","fulfilled","rejected","actions","productsListReducer","reducer"],"sources":["/home/alexa/front-rtk-crud/src/products/products.slice.js"],"sourcesContent":["import {createSlice,createAsyncThunk} from '@reduxjs/toolkit'\n\nexport const getProductsTres =createAsyncThunk(\n    'productsList/getProductsTres',\n    async ()=>{\n       return fetch('http://localhost:3000/products').then(res=> res.json())\n        // const res=await fetch('http://localhost:3000/products')\n        // const data= await res.json()\n        // return data\n    }\n)\n\n\n\nconst initialState={\n products:{},\n status:null\n}\n\nexport const productsListSlice = createSlice({\n    name:'productsList',\n    initialState,\n    reducers:{\n        updateProductsList: (state,action)=>{\n            console.log(\"ðŸš€ ~ file: products.slice.js ~ line 13 ~ state,action\", state,action)           \n            state.products= action.payload\n        }\n    },\n    extraReducers:{\n        [getProductsTres.pending]:(state,action)=>{\n            state.status= 'loading'\n           \n        },\n        [getProductsTres.fulfilled]:(state,action)=>{\n            state.status= 'success'\n            state.products= action.payload\n        },\n        [getProductsTres.rejected]:(state,action)=>{\n            state.status= 'failed'\n            \n        }\n    }\n})\n\nexport const {updateProductsList}=productsListSlice.actions\n\nexport const productsListReducer= productsListSlice.reducer\n"],"mappings":"AAAA,SAAQA,WAAW,EAACC,gBAAgB,QAAO,kBAAkB;AAE7D,OAAO,MAAMC,eAAe,GAAED,gBAAgB,CAC1C,8BAA8B,EAC9B,YAAU;EACP,OAAOE,KAAK,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAGA,GAAG,CAACC,IAAI,EAAE,CAAC;EACpE;EACA;EACA;AACJ,CAAC,CACJ;;AAID,MAAMC,YAAY,GAAC;EAClBC,QAAQ,EAAC,CAAC,CAAC;EACXC,MAAM,EAAC;AACR,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGV,WAAW,CAAC;EACzCW,IAAI,EAAC,cAAc;EACnBJ,YAAY;EACZK,QAAQ,EAAC;IACLC,kBAAkB,EAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MAChCC,OAAO,CAACC,GAAG,CAAC,uDAAuD,EAAEH,KAAK,EAACC,MAAM,CAAC;MAClFD,KAAK,CAACN,QAAQ,GAAEO,MAAM,CAACG,OAAO;IAClC;EACJ,CAAC;EACDC,aAAa,EAAC;IACV,CAACjB,eAAe,CAACkB,OAAO,GAAE,CAACN,KAAK,EAACC,MAAM,KAAG;MACtCD,KAAK,CAACL,MAAM,GAAE,SAAS;IAE3B,CAAC;IACD,CAACP,eAAe,CAACmB,SAAS,GAAE,CAACP,KAAK,EAACC,MAAM,KAAG;MACxCD,KAAK,CAACL,MAAM,GAAE,SAAS;MACvBK,KAAK,CAACN,QAAQ,GAAEO,MAAM,CAACG,OAAO;IAClC,CAAC;IACD,CAAChB,eAAe,CAACoB,QAAQ,GAAE,CAACR,KAAK,EAACC,MAAM,KAAG;MACvCD,KAAK,CAACL,MAAM,GAAE,QAAQ;IAE1B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACI;AAAkB,CAAC,GAACH,iBAAiB,CAACa,OAAO;AAE3D,OAAO,MAAMC,mBAAmB,GAAEd,iBAAiB,CAACe,OAAO"},"metadata":{},"sourceType":"module"}