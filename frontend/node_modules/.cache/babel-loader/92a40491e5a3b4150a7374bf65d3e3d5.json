{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { baseURL } from \"./baseURL\";\nlet base = baseURL;\nexport const getOneProduct = createAsyncThunk(\"product/getOneProduct\", async (_ref, _ref2) => {\n  let {\n    id\n  } = _ref;\n  let {\n    dispatch,\n    getState\n  } = _ref2;\n  // const {lo que esta en store}=getState\n  //   return fetch(`http://localhost:3000/products`).then(res=> res.json())\n  const res = await fetch(`${base}/product${dataPage}&limit=${dataLimit}&keyword=${dataKeyword}`);\n  const data = await res.json();\n  return data;\n});","map":{"version":3,"names":["createAsyncThunk","baseURL","base","getOneProduct","id","dispatch","getState","res","fetch","dataPage","dataLimit","dataKeyword","data","json"],"sources":["/home/alexa/front-rtk-crud/src/products/products.api.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { baseURL } from \"./baseURL\";\nlet base=baseURL\nexport const getOneProduct = createAsyncThunk(\n  \"product/getOneProduct\",\n  async ({id},{dispatch,getState}) => {\n      \n      \n// const {lo que esta en store}=getState\n    //   return fetch(`http://localhost:3000/products`).then(res=> res.json())\n    const res = await fetch(`${base}/product${dataPage}&limit=${dataLimit}&keyword=${dataKeyword}`);\n    const data = await res.json();\n    return data;\n  }\n);\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,WAAW;AACnC,IAAIC,IAAI,GAACD,OAAO;AAChB,OAAO,MAAME,aAAa,GAAGH,gBAAgB,CAC3C,uBAAuB,EACvB,uBAAoC;EAAA,IAA7B;IAACI;EAAE,CAAC;EAAA,IAAC;IAACC,QAAQ;IAACC;EAAQ,CAAC;EAGjC;EACI;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEN,IAAK,WAAUO,QAAS,UAASC,SAAU,YAAWC,WAAY,EAAC,CAAC;EAC/F,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;EAC7B,OAAOD,IAAI;AACb,CAAC,CACF"},"metadata":{},"sourceType":"module"}