{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { get } from './products.api';\n// export const getProductsTres =createAsyncThunk(\n//     'productsList/getProductsTres',\n//     async ()=>{\n//     //    return fetch('http://localhost:3000/products').then(res=> res.json())\n//         const res=await fetch('http://localhost:3000/products')\n//         const data= await res.json()\n//         return data\n//     }\n// )\n\nconst initialState = {\n  productsList: {},\n  status: null\n};\nexport const productsListSlice = createSlice({\n  name: 'productsList',\n  initialState,\n  reducers: {\n    // updateProductsList: (state,action)=>{\n    //     console.log(\"ðŸš€ ~ file: products.slice.js ~ line 13 ~ state,action\", state,action)           \n    //     state.products= action.payload\n    // }\n  },\n  extraReducers: {\n    [getProductsTres.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getProductsTres.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.productsList = action.payload;\n    },\n    [getProductsTres.rejected]: (state, action) => {\n      state.status = 'failed';\n    }\n  }\n});\nexport const {\n  updateProductsList\n} = productsListSlice.actions;\nexport const productsListReducer = productsListSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","get","initialState","productsList","status","productsListSlice","name","reducers","extraReducers","getProductsTres","pending","state","action","fulfilled","payload","rejected","updateProductsList","actions","productsListReducer","reducer"],"sources":["/home/alexa/front-rtk-crud/src/products/products.slice.js"],"sourcesContent":["import {createSlice,createAsyncThunk} from '@reduxjs/toolkit'\nimport {get} from './products.api'\n// export const getProductsTres =createAsyncThunk(\n//     'productsList/getProductsTres',\n//     async ()=>{\n//     //    return fetch('http://localhost:3000/products').then(res=> res.json())\n//         const res=await fetch('http://localhost:3000/products')\n//         const data= await res.json()\n//         return data\n//     }\n// )\n\n\n\nconst initialState={\n    productsList:{},\n status:null\n}\n\nexport const productsListSlice = createSlice({\n    name:'productsList',\n    initialState,\n    reducers:{\n        // updateProductsList: (state,action)=>{\n        //     console.log(\"ðŸš€ ~ file: products.slice.js ~ line 13 ~ state,action\", state,action)           \n        //     state.products= action.payload\n        // }\n    },\n    extraReducers:{\n        [getProductsTres.pending]:(state,action)=>{\n            state.status= 'loading'\n           \n        },\n        [getProductsTres.fulfilled]:(state,action)=>{\n            state.status= 'success'\n            state.productsList= action.payload\n        },\n        [getProductsTres.rejected]:(state,action)=>{\n            state.status= 'failed'\n            \n        }\n    }\n})\n\nexport const {updateProductsList}=productsListSlice.actions\n\nexport const productsListReducer= productsListSlice.reducer\n"],"mappings":"AAAA,SAAQA,WAAW,EAACC,gBAAgB,QAAO,kBAAkB;AAC7D,SAAQC,GAAG,QAAO,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,YAAY,GAAC;EACfC,YAAY,EAAC,CAAC,CAAC;EAClBC,MAAM,EAAC;AACR,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGN,WAAW,CAAC;EACzCO,IAAI,EAAC,cAAc;EACnBJ,YAAY;EACZK,QAAQ,EAAC;IACL;IACA;IACA;IACA;EACJ,CAAC;EACDC,aAAa,EAAC;IACV,CAACC,eAAe,CAACC,OAAO,GAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACtCD,KAAK,CAACP,MAAM,GAAE,SAAS;IAE3B,CAAC;IACD,CAACK,eAAe,CAACI,SAAS,GAAE,CAACF,KAAK,EAACC,MAAM,KAAG;MACxCD,KAAK,CAACP,MAAM,GAAE,SAAS;MACvBO,KAAK,CAACR,YAAY,GAAES,MAAM,CAACE,OAAO;IACtC,CAAC;IACD,CAACL,eAAe,CAACM,QAAQ,GAAE,CAACJ,KAAK,EAACC,MAAM,KAAG;MACvCD,KAAK,CAACP,MAAM,GAAE,QAAQ;IAE1B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACY;AAAkB,CAAC,GAACX,iBAAiB,CAACY,OAAO;AAE3D,OAAO,MAAMC,mBAAmB,GAAEb,iBAAiB,CAACc,OAAO"},"metadata":{},"sourceType":"module"}