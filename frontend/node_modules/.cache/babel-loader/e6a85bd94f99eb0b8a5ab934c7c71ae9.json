{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getProductsTres } from './products.api';\nconst initialState = {\n  productsList: {},\n  status: null\n};\nexport const productsListSlice = createSlice({\n  name: 'productsList',\n  initialState,\n  reducers: {\n    // updateProductsList: (state,action)=>{\n    //     console.log(\"ðŸš€ ~ file: products.slice.js ~ line 13 ~ state,action\", state,action)           \n    //     state.products= action.payload\n    // }\n  },\n  extraReducers: {\n    [getProductsTres.pending]: (state, action) => {\n      state.status = 'loading';\n    },\n    [getProductsTres.fulfilled]: (state, action) => {\n      state.status = 'success';\n      state.productsList = action.payload;\n    },\n    [getProductsTres.rejected]: (state, action) => {\n      state.status = 'failed';\n    }\n  }\n});\nexport const {\n  updateProductsList\n} = productsListSlice.actions;\nexport const productsListReducer = productsListSlice.reducer;","map":{"version":3,"names":["createSlice","getProductsTres","initialState","productsList","status","productsListSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","updateProductsList","actions","productsListReducer","reducer"],"sources":["/home/alexa/front-rtk-crud/src/products/products.slice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\nimport {getProductsTres} from './products.api'\n\n\n\n\nconst initialState={\n    productsList:{},\n status:null\n}\n\nexport const productsListSlice = createSlice({\n    name:'productsList',\n    initialState,\n    reducers:{\n        // updateProductsList: (state,action)=>{\n        //     console.log(\"ðŸš€ ~ file: products.slice.js ~ line 13 ~ state,action\", state,action)           \n        //     state.products= action.payload\n        // }\n    },\n    extraReducers:{\n        [getProductsTres.pending]:(state,action)=>{\n            state.status= 'loading'\n           \n        },\n        [getProductsTres.fulfilled]:(state,action)=>{\n            state.status= 'success'\n            state.productsList= action.payload\n        },\n        [getProductsTres.rejected]:(state,action)=>{\n            state.status= 'failed'\n            \n        }\n    }\n})\n\nexport const {updateProductsList}=productsListSlice.actions\n\nexport const productsListReducer= productsListSlice.reducer\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,eAAe,QAAO,gBAAgB;AAK9C,MAAMC,YAAY,GAAC;EACfC,YAAY,EAAC,CAAC,CAAC;EAClBC,MAAM,EAAC;AACR,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGL,WAAW,CAAC;EACzCM,IAAI,EAAC,cAAc;EACnBJ,YAAY;EACZK,QAAQ,EAAC;IACL;IACA;IACA;IACA;EACJ,CAAC;EACDC,aAAa,EAAC;IACV,CAACP,eAAe,CAACQ,OAAO,GAAE,CAACC,KAAK,EAACC,MAAM,KAAG;MACtCD,KAAK,CAACN,MAAM,GAAE,SAAS;IAE3B,CAAC;IACD,CAACH,eAAe,CAACW,SAAS,GAAE,CAACF,KAAK,EAACC,MAAM,KAAG;MACxCD,KAAK,CAACN,MAAM,GAAE,SAAS;MACvBM,KAAK,CAACP,YAAY,GAAEQ,MAAM,CAACE,OAAO;IACtC,CAAC;IACD,CAACZ,eAAe,CAACa,QAAQ,GAAE,CAACJ,KAAK,EAACC,MAAM,KAAG;MACvCD,KAAK,CAACN,MAAM,GAAE,QAAQ;IAE1B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACW;AAAkB,CAAC,GAACV,iBAAiB,CAACW,OAAO;AAE3D,OAAO,MAAMC,mBAAmB,GAAEZ,iBAAiB,CAACa,OAAO"},"metadata":{},"sourceType":"module"}